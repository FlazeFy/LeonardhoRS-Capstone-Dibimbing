definitions:
  entity.Admin:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      password:
        type: string
      telegram_is_valid:
        type: boolean
      telegram_user_id:
        type: string
      username:
        type: string
    type: object
  entity.AllHistory:
    properties:
      admin_id:
        description: FK - Admin
        type: string
      admins:
        $ref: '#/definitions/entity.Admin'
      created_at:
        type: string
      id:
        type: string
      technician_id:
        description: FK - Technician
        type: string
      technicians:
        $ref: '#/definitions/entity.Technician'
      type_history:
        type: string
      type_user:
        type: string
      user_id:
        description: FK - User
        type: string
      users:
        $ref: '#/definitions/entity.User'
    type: object
  entity.Asset:
    properties:
      asset_category:
        type: string
      asset_desc:
        type: string
      asset_image_url:
        type: string
      asset_merk:
        type: string
      asset_name:
        type: string
      asset_price:
        type: string
      asset_status:
        type: string
      created_at:
        type: string
      created_by:
        description: FK - Admin
        type: string
      deleted_at:
        type: string
      id:
        type: string
      updated_at:
        type: string
    type: object
  entity.AssetFinding:
    properties:
      asset_placement_id:
        description: FK - Asset Placement
        type: string
      asset_placements:
        $ref: '#/definitions/entity.AssetPlacement'
      created_at:
        type: string
      finding_by_technician:
        description: FK - Technician
        type: string
      finding_by_user:
        description: FK - User / Guest
        type: string
      finding_category:
        type: string
      finding_image:
        type: string
      finding_notes:
        type: string
      id:
        type: string
      technicians:
        $ref: '#/definitions/entity.Technician'
      users:
        $ref: '#/definitions/entity.User'
    type: object
  entity.AssetMaintenance:
    properties:
      asset_placement_id:
        description: FK - Asset Placement
        type: string
      created_at:
        type: string
      created_by:
        description: FK - Admin
        type: string
      id:
        type: string
      maintenance_by:
        description: FK - Technician
        type: string
      maintenance_day:
        type: string
      maintenance_hour_end:
        type: string
      maintenance_hour_start:
        type: string
      maintenance_notes:
        type: string
      updated_at:
        type: string
    type: object
  entity.AssetMaintenanceSchedule:
    properties:
      asset_category:
        type: string
      asset_name:
        description: FK - Asset
        type: string
      asset_qty:
        description: FK - Asset Placement
        type: integer
      email:
        type: string
      maintenance_day:
        type: string
      maintenance_hour_end:
        type: string
      maintenance_hour_start:
        type: string
      maintenance_notes:
        type: string
      telegram_is_valid:
        type: boolean
      telegram_user_id:
        type: string
      username:
        description: FK - Technician
        type: string
    type: object
  entity.AssetPlacement:
    properties:
      asset_desc:
        type: string
      asset_id:
        description: FK - Asset
        type: string
      asset_owner:
        description: FK - Technician
        type: string
      asset_qty:
        type: integer
      created_at:
        type: string
      created_by:
        description: FK - Admin
        type: string
      id:
        type: string
      room_id:
        description: FK - Room
        type: string
      updated_at:
        type: string
    type: object
  entity.History:
    properties:
      admin_id:
        type: string
      created_at:
        type: string
      id:
        type: string
      technician_id:
        type: string
      type_history:
        type: string
      type_user:
        type: string
      user_id:
        type: string
    type: object
  entity.Metadata:
    properties:
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
      total_pages:
        type: integer
    type: object
  entity.ResponseGetAllAsset:
    properties:
      data:
        items:
          $ref: '#/definitions/entity.Asset'
        type: array
      message:
        example: asset fetched
        type: string
      metadata:
        $ref: '#/definitions/entity.Metadata'
      status:
        example: success
        type: string
    type: object
  entity.ResponseGetAllAssetFinding:
    properties:
      data:
        items:
          $ref: '#/definitions/entity.AssetFinding'
        type: array
      message:
        example: asset finding fetched
        type: string
      metadata:
        $ref: '#/definitions/entity.Metadata'
      status:
        example: success
        type: string
    type: object
  entity.ResponseGetAllAssetMaintenance:
    properties:
      data:
        items:
          $ref: '#/definitions/entity.AssetMaintenance'
        type: array
      message:
        example: asset maintenance fetched
        type: string
      metadata:
        $ref: '#/definitions/entity.Metadata'
      status:
        example: success
        type: string
    type: object
  entity.ResponseGetAllAssetMaintenanceSchedule:
    properties:
      data:
        items:
          $ref: '#/definitions/entity.AssetMaintenanceSchedule'
        type: array
      message:
        example: asset maintenance schedule fetched
        type: string
      status:
        example: success
        type: string
    type: object
  entity.ResponseGetAllAssetPlacement:
    properties:
      data:
        items:
          $ref: '#/definitions/entity.AssetPlacement'
        type: array
      message:
        example: asset placement fetched
        type: string
      metadata:
        $ref: '#/definitions/entity.Metadata'
      status:
        example: success
        type: string
    type: object
  entity.ResponseGetAllHistory:
    properties:
      data:
        items:
          $ref: '#/definitions/entity.AllHistory'
        type: array
      message:
        example: history fetched
        type: string
      metadata:
        $ref: '#/definitions/entity.Metadata'
      status:
        example: success
        type: string
    type: object
  entity.ResponseGetAllRoom:
    properties:
      data:
        items:
          $ref: '#/definitions/entity.Room'
        type: array
      message:
        example: room fetched
        type: string
      metadata:
        $ref: '#/definitions/entity.Metadata'
      status:
        example: success
        type: string
    type: object
  entity.ResponseGetAllTechnician:
    properties:
      data:
        items:
          $ref: '#/definitions/entity.Technician'
        type: array
      message:
        example: technician fetched
        type: string
      metadata:
        $ref: '#/definitions/entity.Metadata'
      status:
        example: success
        type: string
    type: object
  entity.ResponseGetDeletedAsset:
    properties:
      data:
        items:
          $ref: '#/definitions/entity.Asset'
        type: array
      message:
        example: deleted asset fetched
        type: string
      status:
        example: success
        type: string
    type: object
  entity.ResponseGetFindingHourTotal:
    properties:
      data:
        items:
          $ref: '#/definitions/entity.StatsContextTotal'
        type: array
      message:
        example: asset finding fetched
        type: string
      status:
        example: success
        type: string
    type: object
  entity.ResponseGetMostContext:
    properties:
      data:
        items:
          $ref: '#/definitions/entity.StatsContextTotal'
        type: array
      message:
        example: asset fetched
        type: string
      status:
        example: success
        type: string
    type: object
  entity.ResponseGetMyHistory:
    properties:
      data:
        items:
          $ref: '#/definitions/entity.History'
        type: array
      message:
        example: history fetched
        type: string
      metadata:
        $ref: '#/definitions/entity.Metadata'
      status:
        example: success
        type: string
    type: object
  entity.ResponseGetMyProfile:
    properties:
      data:
        items:
          $ref: '#/definitions/entity.User'
        type: array
      message:
        example: user fetched
        type: string
      status:
        example: success
        type: string
    type: object
  entity.ResponseGetRoomAssetByFloorAndRoomName:
    properties:
      data:
        items:
          $ref: '#/definitions/entity.RoomAsset'
        type: array
      message:
        example: room fetched
        type: string
      metadata:
        $ref: '#/definitions/entity.Metadata'
      status:
        example: success
        type: string
    type: object
  entity.ResponseGetRoomAssetShortByFloorAndRoomName:
    properties:
      data:
        items:
          $ref: '#/definitions/entity.RoomAssetShort'
        type: array
      message:
        example: room fetched
        type: string
      metadata:
        $ref: '#/definitions/entity.Metadata'
      status:
        example: success
        type: string
    type: object
  entity.Room:
    properties:
      created_at:
        type: string
      floor:
        type: string
      id:
        type: string
      room_dept:
        type: string
      room_name:
        type: string
    type: object
  entity.RoomAsset:
    properties:
      asset_category:
        type: string
      asset_desc:
        type: string
      asset_merk:
        type: string
      asset_name:
        type: string
      floor:
        type: string
      room_dept:
        type: string
      room_name:
        type: string
      total_asset:
        type: integer
    type: object
  entity.RoomAssetShort:
    properties:
      asset_category:
        type: string
      asset_name:
        type: string
      floor:
        type: string
      room_dept:
        type: string
      room_name:
        type: string
    type: object
  entity.StatsContextTotal:
    properties:
      context:
        type: string
      total:
        type: integer
    type: object
  entity.Technician:
    properties:
      created_at:
        type: string
      created_by:
        description: FK - User
        type: string
      email:
        type: string
      id:
        type: string
      password:
        type: string
      telegram_is_valid:
        type: boolean
      telegram_user_id:
        type: string
      username:
        type: string
    type: object
  entity.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      password:
        type: string
      telegram_is_valid:
        type: boolean
      telegram_user_id:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/asset:
    get:
      consumes:
      - application/json
      description: Returns a paginated list of assets available
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResponseGetAllAsset'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get All Asset
      tags:
      - Asset
  /api/v1/asset/deleted:
    get:
      consumes:
      - application/json
      description: Returns a list of deleted assets
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResponseGetDeletedAsset'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get Deleted Asset
      tags:
      - Asset
  /api/v1/asset/finding:
    get:
      consumes:
      - application/json
      description: Returns a paginated list of assets finding
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResponseGetAllAssetFinding'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get All Asset Finding
      tags:
      - Asset
  /api/v1/asset/finding/hour_total:
    get:
      consumes:
      - application/json
      description: Returns a paginated list of assets finding total per hour
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResponseGetFindingHourTotal'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get All Asset Finding Hour Total
      tags:
      - Asset
  /api/v1/asset/maintenance:
    get:
      consumes:
      - application/json
      description: Returns a paginated list of assets maintenance
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResponseGetAllAssetMaintenance'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get All Asset Maintenance
      tags:
      - Asset
  /api/v1/asset/maintenance/schedule:
    get:
      consumes:
      - application/json
      description: Returns a list of assets maintenance schedule
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResponseGetAllAssetMaintenanceSchedule'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get All Asset Maintenance Schedule
      tags:
      - Asset
  /api/v1/asset/most_context/{targe_col}:
    get:
      consumes:
      - application/json
      description: Returns a list of most appear item in asset maintenance by given
        field
      parameters:
      - description: 'Target Column to Analyze (such as: maintenance_day)'
        in: path
        name: target_col
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResponseGetMostContext'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get Most Context Asset Maintenance
      tags:
      - Asset
  /api/v1/asset/placement:
    get:
      consumes:
      - application/json
      description: Returns a paginated list of assets placement
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResponseGetAllAssetPlacement'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get All Asset Placement
      tags:
      - Asset
  /api/v1/history/all:
    get:
      consumes:
      - application/json
      description: Returns a paginated list of all users histories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResponseGetAllHistory'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get All History
      tags:
      - History
  /api/v1/history/most_context/{targe_col}:
    get:
      consumes:
      - application/json
      description: Returns a list of most appear item in history by given field
      parameters:
      - description: 'Target Column to Analyze (such as: type_user, type_history)'
        in: path
        name: target_col
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResponseGetMostContext'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get Most Context History
      tags:
      - History
  /api/v1/history/my:
    get:
      consumes:
      - application/json
      description: Returns a paginated list of my histories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResponseGetMyHistory'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get My History
      tags:
      - History
  /api/v1/profile:
    get:
      consumes:
      - application/json
      description: Returns a paginated list of handle
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResponseGetMyProfile'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get My Profile
      tags:
      - Use
  /api/v1/room:
    get:
      consumes:
      - application/json
      description: Returns a paginated list of room
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResponseGetAllRoom'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get All Room
      tags:
      - Room
  /api/v1/room/asset/detail/{floor}/{room_name}:
    get:
      consumes:
      - application/json
      description: Returns a paginated list of asset that found in a room
      parameters:
      - description: In which Room you want to find the asset. Type 'all' to search
          in all room
        in: path
        name: room_name
        required: true
        type: string
      - description: In which Floor you want to find the asset.
        in: path
        name: floor
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResponseGetRoomAssetByFloorAndRoomName'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get Room Asset By Floor And Room Name (Detail)
      tags:
      - Room
  /api/v1/room/asset/short/{floor}/{room_name}:
    get:
      consumes:
      - application/json
      description: Returns a paginated list of asset that found in a room. in short
        format
      parameters:
      - description: In which Room you want to find the asset. Type 'all' to search
          in all room
        in: path
        name: room_name
        required: true
        type: string
      - description: In which Floor you want to find the asset.
        in: path
        name: floor
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResponseGetRoomAssetShortByFloorAndRoomName'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get Room Asset By Floor And Room Name (Short)
      tags:
      - Room
  /api/v1/room/most_context/{targe_col}:
    get:
      consumes:
      - application/json
      description: Returns a list of most appear item in room by given field
      parameters:
      - description: 'Target Column to Analyze (such as: asset_merk, asset_category,
          or asset_status)'
        in: path
        name: target_col
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResponseGetMostContext'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get Most Context Room
      tags:
      - Room
  /api/v1/technician:
    get:
      consumes:
      - application/json
      description: Returns a paginated list of technician
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ResponseGetAllTechnician'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get All Technician
      tags:
      - Technician
swagger: "2.0"
